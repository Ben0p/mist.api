#!/usr/bin/env python3
"""Get EC2 default images for all available regions.
Takes approximately 8 minutes to run.

Usage asssuming on api directory:
    ./bin/get-ec2-images Username Password IAM-account-url aws_default_images.json  # noqa

Requires selenium-wire to run.
Install it with `pip install selenium-wire`
"""

import time
import json
from urllib.parse import urlparse
import argparse

from seleniumwire import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.firefox.options import Options


REGIONS = [
    # US
    "us-east-1",
    "us-east-2",
    "us-west-1",
    "us-west-2",
    # Asia
    "ap-east-1",
    "ap-south-1",
    "ap-northeast-1",
    "ap-northeast-2",
    "ap-northeast-3",
    "ap-southeast-1",
    "ap-southeast-2",
    # Europe
    "eu-central-1",
    "eu-west-1",
    "eu-west-2",
    "eu-west-3",
    "eu-south-1",
    "eu-north-1",
    # Canada
    "ca-central-1",
    # Africa
    "af-south-1",
    # Middle East
    "me-south-1",
    # South America
    "sa-east-1",
]


def get_regions(requests):
    for request in requests:
        if request.url.endswith("AWSMPControlPlane.SearchListings"):
            body = json.loads(request.response.body.decode())
            regions = [
                item["displayName"]
                for item in body["listingTermFilterAggregations"]["Region"]
            ]
            return regions
    return REGIONS


def parse_args():
    parser = argparse.ArgumentParser(
        description="Get default AWS images per region"
    )
    parser.add_argument("username", help="IAM account username")
    parser.add_argument("password", help="IAM password")
    parser.add_argument(
        "url", help="Sign-in URL for IAM users in your account"
    )
    parser.add_argument(
        "file", help="JSON file where AWS images will be stored"
    )
    args = parser.parse_args()
    return args


def main():
    args = parse_args()
    options = Options()
    options.headless = True
    driver = webdriver.Firefox(options=options)
    driver.get(args.url)

    element = WebDriverWait(driver, 20).until(
        EC.presence_of_element_located((By.ID, "signin_button"))
    )

    username = driver.find_element_by_name("username")
    password = driver.find_element_by_name("password")
    username.send_keys(args.username)
    password.send_keys(args.password)
    element.click()

    element = WebDriverWait(driver, 20).until(
        EC.presence_of_element_located((By.ID, "solutions_ec2launchwizard"))
    )
    element.click()

    base_url = driver.current_url
    base_region = urlparse(base_url).query.split("=")[1]
    regions = get_regions(driver.requests)
    default_images = {}
    for region in regions:
        del driver.requests
        region_url = base_url.replace(base_region, region)
        driver.get(region_url)
        time.sleep(30)
        for request in driver.requests:
            if "searchAmis" in request.url:
                body = json.loads(request.response.body)
                default_images[region] = {
                    item['imageId']: item['name']
                    for item in body["matchingAmis"]
                    if item["platform"] != "macOS"
                }
                break
        else:
            print(f'Failed to get images for region {region}')

    with open(args.file, "w") as f:
        f.write(json.dumps(default_images, indent=4, sort_keys=True))

    driver.close()


if __name__ == "__main__":
    main()
